<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="DESKTOP-4FFBNMC" failures="0" tests="15" name="ChromeTest" time="0.883" errors="0" timestamp="2024-12-24T18:51:17 IST">
  <testcase classname="testClasses.BaseClass" name="@BeforeSuite createReport" time="-1.735046476971E9">
    <failure type="org.testng.TestNGException" message="
Native Injection is NOT supported for @BeforeSuite annotated createReport.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection">
      <![CDATA[org.testng.TestNGException: 
Native Injection is NOT supported for @BeforeSuite annotated createReport.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite createReport -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testClasses.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testClasses.ManageUserTestClass" name="verifyTheManageUsersPageIsOpenWhileClickingOnUsers" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheManageUsersPageIsOpenWhileClickingOnUsers -->
  <testcase classname="testClasses.ManageUserTestClass" name="verifyToAdd_aNewUser" time="0.0">
    <skipped/>
  </testcase> <!-- verifyToAdd_aNewUser -->
  <testcase classname="testClasses.ManageProductTestClass" name="verifyProductsPageIsOpenWhileClickingOnListProducts" time="0.0">
    <skipped/>
  </testcase> <!-- verifyProductsPageIsOpenWhileClickingOnListProducts -->
  <testcase classname="testClasses.ManageProductTestClass" name="verifyToCreateA_newProduct" time="0.0">
    <skipped/>
  </testcase> <!-- verifyToCreateA_newProduct -->
  <testcase classname="testClasses.ManageProductTestClass" name="verifyToDeleteAddedProduct" time="0.0">
    <skipped/>
  </testcase> <!-- verifyToDeleteAddedProduct -->
  <testcase classname="testClasses.HomePageTestClass" name="verifyAllTilesDisplayedOnHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyAllTilesDisplayedOnHomePage -->
  <testcase classname="testClasses.HomePageTestClass" name="verifySuccessfulSignOut" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfulSignOut -->
  <testcase classname="testClasses.HomePageTestClass" name="verifyTheTooltip_Calculator_isShowingWhileHoveringTheMouseOnCalculator" time="0.001">
    <skipped/>
  </testcase> <!-- verifyTheTooltip_Calculator_isShowingWhileHoveringTheMouseOnCalculator -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyTheExactURL_OpensWhileHittingTheBaseURL" time="0.001">
    <skipped/>
  </testcase> <!-- verifyTheExactURL_OpensWhileHittingTheBaseURL -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyTheRememberMeCheckboxIsSelectedByDefault" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheRememberMeCheckboxIsSelectedByDefault -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyResetPasswordPageComingWhileChickingOnForgotYourPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyResetPasswordPageComingWhileChickingOnForgotYourPassword -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyUnsuccessfulLoginOfTheSite" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLoginOfTheSite -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyUnsuccessfulLoginOfTheSite" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLoginOfTheSite -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifyUnsuccessfulLoginOfTheSite" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLoginOfTheSite -->
  <testcase classname="testClasses.LoginPageTestClass" name="verifySuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfullLogin -->
  <testcase classname="testClasses.BaseClass" name="@BeforeSuite createReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite createReport -->
  <testcase classname="testClasses.BaseClass" name="@BeforeSuite createReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite createReport -->
  <testcase classname="testClasses.BaseClass" name="@BeforeSuite createReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite createReport -->
</testsuite> <!-- ChromeTest -->
